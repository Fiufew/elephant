# Generated by Django 4.2.20 on 2025-03-15 20:29

from django.db import migrations, models
import django.db.models.deletion
import items.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(blank=True, null=True, unique=True)),
                ('aggregator', models.CharField(choices=[('Localrent', 'Localrent'), ('Trip', 'Trip'), ('Klook', 'Klook'), ('Rentconnected', 'Rentconnected')], max_length=128)),
                ('date', models.DateField()),
                ('location_delivery', models.CharField(max_length=256)),
                ('location_return', models.CharField(max_length=256)),
                ('name', models.CharField(max_length=256)),
                ('contacts', models.CharField(max_length=64)),
                ('deposit_in_hand', models.IntegerField()),
                ('currency', models.CharField(choices=[('thb', 'THB'), ('usd', 'USD'), ('rub', 'RUB')], max_length=256)),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=64)),
                ('year_manufactured', models.PositiveIntegerField(validators=[items.validators.validate_manufactured_year], verbose_name='Year Manufactured')),
                ('body_type', models.CharField(choices=[('Sedan', 'Sedan'), ('Hatchback', 'Hatchback'), ('Wagon', 'Wagon'), ('Minivan', 'Minivan'), ('Minibus', 'Minibus'), ('Crossover', 'Crossover'), ('Pickup', 'Pickup'), ('Convertible', 'Convertible'), ('Scooter', 'Scooter'), ('Motorcycle', 'Motorcycle'), ('ATV', 'ATV'), ('Buggy', 'Buggy'), ('Coupe', 'Coupe')], max_length=128)),
                ('deposit', models.PositiveIntegerField()),
                ('color', models.CharField(choices=[('White', 'White'), ('Black', 'Black'), ('Grey', 'Grey'), ('Red', 'Red'), ('Blue', 'Blue'), ('Green', 'Green'), ('Yellow', 'Yellow'), ('Brown', 'Brown'), ('Beige', 'Beige'), ('Orange', 'Orange'), ('Silver', 'Silver'), ('Sky blue', 'Sky blue'), ('Purple', 'Purple')], max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='items.brand', verbose_name='Brand')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
                'ordering': ['brand', 'model'],
            },
        ),
        migrations.CreateModel(
            name='Chassis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transmission', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic'), ('Automatic + Manual', 'Automatic + Manual')], max_length=64)),
                ('drive', models.CharField(choices=[('Front wheel', 'Front wheel'), ('Rear wheel', 'Rear wheel'), ('4 wheels', '4 wheels')], max_length=64)),
                ('chassis_abs', models.BooleanField(default=False)),
                ('chassis_ebd', models.BooleanField(default=False)),
                ('chassis_esp', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Chassis',
                'verbose_name_plural': 'Chassis',
                'ordering': ['transmission'],
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_type', models.DecimalField(decimal_places=1, max_digits=3)),
                ('capacity', models.PositiveIntegerField()),
                ('fuel', models.CharField(choices=[('Benzin', 'Benzin'), ('Dizel', 'Dizel'), ('Hybrid', 'Hybrid'), ('Turbo Dizel', 'Turbo Dizel'), ('Gaz', 'Gaz'), ('Electricity', 'Electricity')], max_length=64)),
                ('tank', models.PositiveIntegerField()),
                ('fuel_consumption', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Engine',
                'verbose_name_plural': 'Engines',
                'ordering': ['engine_type'],
            },
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=128)),
                ('is_expired', models.BooleanField(default=False)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_image', models.ImageField(blank=True, null=True, upload_to='files/documents_and_other/')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('is_solved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('solved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Problem',
                'verbose_name_plural': 'Problems',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='items_probl_name_f65dc1_idx')],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winter_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('spring_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('summer_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('autumn_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(choices=[('thb', 'THB'), ('usd', 'USD'), ('rub', 'RUB')], max_length=10, null=True)),
                ('car_price', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price', to='items.car')),
            ],
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract', models.FileField(blank=True, null=True, upload_to='contracts/')),
                ('vaucher', models.FileField(blank=True, null=True, upload_to='vauchers/')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='misc_files', to='items.application')),
            ],
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_delivery', models.DateField()),
                ('date_return', models.DateField()),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rental_dates', to='items.application')),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Models',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='items_carmo_name_ddbeed_idx')],
            },
        ),
        migrations.AddField(
            model_name='car',
            name='chassis',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='car', to='items.chassis', verbose_name='Chassis'),
        ),
        migrations.AddField(
            model_name='car',
            name='engine',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='car', to='items.engine', verbose_name='Engine'),
        ),
        migrations.AddField(
            model_name='car',
            name='insurance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_insurance', to='items.insurance', verbose_name='Car'),
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='items.carmodel', verbose_name='Model'),
        ),
        migrations.AddField(
            model_name='car',
            name='photos',
            field=models.ManyToManyField(blank=True, related_name='cars', to='items.photo', verbose_name='Photos'),
        ),
        migrations.AddField(
            model_name='car',
            name='problems',
            field=models.ManyToManyField(blank=True, related_name='cars', to='items.problem', verbose_name='Problems'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['name'], name='items_brand_name_f0fbf7_idx'),
        ),
        migrations.AddField(
            model_name='application',
            name='auto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='items.car', verbose_name='Car'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['year_manufactured'], name='year_manufactured_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['brand', 'model'], name='brand_model_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['-created_at'], name='created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['-updated_at'], name='updated_at_idx'),
        ),
    ]
